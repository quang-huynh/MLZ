// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// MLnegLL
double MLnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int nbreaks, int spCont);
RcppExport SEXP MLZ_MLnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLnegLL(stpar, Lbar, ss, LH, Lc, nbreaks, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLprofile
double MLprofile(NumericVector Z, NumericVector yearZ, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int nbreaks, int spCont);
RcppExport SEXP MLZ_MLprofile(SEXP ZSEXP, SEXP yearZSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yearZ(yearZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLprofile(Z, yearZ, Lbar, ss, LH, Lc, nbreaks, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLpred
List MLpred(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int nbreaks, int spCont);
RcppExport SEXP MLZ_MLpred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLpred(stpar, Lbar, ss, LH, Lc, nbreaks, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLfullnegLL
double MLfullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int nbreaks, int spCont);
RcppExport SEXP MLZ_MLfullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLfullnegLL(stpar, Lbar, ss, LH, Lc, nbreaks, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLe
double MLe(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector eff, NumericVector LH, double Lc, double eff_init, int n_age, int n_season, int obs_season, double timing, int logpar);
RcppExport SEXP MLZ_MLe(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP effSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP eff_initSEXP, SEXP n_ageSEXP, SEXP n_seasonSEXP, SEXP obs_seasonSEXP, SEXP timingSEXP, SEXP logparSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eff(effSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< double >::type eff_init(eff_initSEXP);
    Rcpp::traits::input_parameter< int >::type n_age(n_ageSEXP);
    Rcpp::traits::input_parameter< int >::type n_season(n_seasonSEXP);
    Rcpp::traits::input_parameter< int >::type obs_season(obs_seasonSEXP);
    Rcpp::traits::input_parameter< double >::type timing(timingSEXP);
    Rcpp::traits::input_parameter< int >::type logpar(logparSEXP);
    rcpp_result_gen = Rcpp::wrap(MLe(stpar, Lbar, ss, eff, LH, Lc, eff_init, n_age, n_season, obs_season, timing, logpar));
    return rcpp_result_gen;
END_RCPP
}
// MLepred
List MLepred(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector eff, NumericVector LH, double Lc, double eff_init, int n_age, int n_season, int obs_season, double timing, int logpar);
RcppExport SEXP MLZ_MLepred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP effSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP eff_initSEXP, SEXP n_ageSEXP, SEXP n_seasonSEXP, SEXP obs_seasonSEXP, SEXP timingSEXP, SEXP logparSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eff(effSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< double >::type eff_init(eff_initSEXP);
    Rcpp::traits::input_parameter< int >::type n_age(n_ageSEXP);
    Rcpp::traits::input_parameter< int >::type n_season(n_seasonSEXP);
    Rcpp::traits::input_parameter< int >::type obs_season(obs_seasonSEXP);
    Rcpp::traits::input_parameter< double >::type timing(timingSEXP);
    Rcpp::traits::input_parameter< int >::type logpar(logparSEXP);
    rcpp_result_gen = Rcpp::wrap(MLepred(stpar, Lbar, ss, eff, LH, Lc, eff_init, n_age, n_season, obs_season, timing, logpar));
    return rcpp_result_gen;
END_RCPP
}
// MLefullnegLL
double MLefullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector eff, NumericVector LH, double Lc, double eff_init, int n_age, int n_season, int obs_season, double timing, int logpar);
RcppExport SEXP MLZ_MLefullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP effSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP eff_initSEXP, SEXP n_ageSEXP, SEXP n_seasonSEXP, SEXP obs_seasonSEXP, SEXP timingSEXP, SEXP logparSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eff(effSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< double >::type eff_init(eff_initSEXP);
    Rcpp::traits::input_parameter< int >::type n_age(n_ageSEXP);
    Rcpp::traits::input_parameter< int >::type n_season(n_seasonSEXP);
    Rcpp::traits::input_parameter< int >::type obs_season(obs_seasonSEXP);
    Rcpp::traits::input_parameter< double >::type timing(timingSEXP);
    Rcpp::traits::input_parameter< int >::type logpar(logparSEXP);
    rcpp_result_gen = Rcpp::wrap(MLefullnegLL(stpar, Lbar, ss, eff, LH, Lc, eff_init, n_age, n_season, obs_season, timing, logpar));
    return rcpp_result_gen;
END_RCPP
}
// MLefixM
double MLefixM(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector eff, NumericVector LH, double Lc, double eff_init, int n_age, int n_season, int obs_season, double timing, int logpar);
RcppExport SEXP MLZ_MLefixM(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP effSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP eff_initSEXP, SEXP n_ageSEXP, SEXP n_seasonSEXP, SEXP obs_seasonSEXP, SEXP timingSEXP, SEXP logparSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eff(effSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< double >::type eff_init(eff_initSEXP);
    Rcpp::traits::input_parameter< int >::type n_age(n_ageSEXP);
    Rcpp::traits::input_parameter< int >::type n_season(n_seasonSEXP);
    Rcpp::traits::input_parameter< int >::type obs_season(obs_seasonSEXP);
    Rcpp::traits::input_parameter< double >::type timing(timingSEXP);
    Rcpp::traits::input_parameter< int >::type logpar(logparSEXP);
    rcpp_result_gen = Rcpp::wrap(MLefixM(stpar, Lbar, ss, eff, LH, Lc, eff_init, n_age, n_season, obs_season, timing, logpar));
    return rcpp_result_gen;
END_RCPP
}
// MLefixMfullnegLL
double MLefixMfullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector eff, NumericVector LH, double Lc, double eff_init, int n_age, int n_season, int obs_season, double timing, int logpar);
RcppExport SEXP MLZ_MLefixMfullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP effSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP eff_initSEXP, SEXP n_ageSEXP, SEXP n_seasonSEXP, SEXP obs_seasonSEXP, SEXP timingSEXP, SEXP logparSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eff(effSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< double >::type eff_init(eff_initSEXP);
    Rcpp::traits::input_parameter< int >::type n_age(n_ageSEXP);
    Rcpp::traits::input_parameter< int >::type n_season(n_seasonSEXP);
    Rcpp::traits::input_parameter< int >::type obs_season(obs_seasonSEXP);
    Rcpp::traits::input_parameter< double >::type timing(timingSEXP);
    Rcpp::traits::input_parameter< int >::type logpar(logparSEXP);
    rcpp_result_gen = Rcpp::wrap(MLefixMfullnegLL(stpar, Lbar, ss, eff, LH, Lc, eff_init, n_age, n_season, obs_season, timing, logpar));
    return rcpp_result_gen;
END_RCPP
}
// MLeqnegLL
double MLeqnegLL(double Z, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int spCont);
RcppExport SEXP MLZ_MLeqnegLL(SEXP ZSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLeqnegLL(Z, Lbar, ss, LH, Lc, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLeqpred
List MLeqpred(double Z, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int spCont);
RcppExport SEXP MLZ_MLeqpred(SEXP ZSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLeqpred(Z, Lbar, ss, LH, Lc, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLeqfullnegLL
double MLeqfullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector LH, double Lc, int spCont);
RcppExport SEXP MLZ_MLeqfullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLeqfullnegLL(stpar, Lbar, ss, LH, Lc, spCont));
    return rcpp_result_gen;
END_RCPP
}
// SSM_MSM1_negLL
double SSM_MSM1_negLL(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM1, int spCont);
RcppExport SEXP MLZ_SSM_MSM1_negLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM1SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM1(isMSM1SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(SSM_MSM1_negLL(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM1, spCont));
    return rcpp_result_gen;
END_RCPP
}
// SSM_MSM1_profile
double SSM_MSM1_profile(NumericVector stpar, NumericVector year, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int spCont);
RcppExport SEXP MLZ_SSM_MSM1_profile(SEXP stparSEXP, SEXP yearSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type year(yearSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(SSM_MSM1_profile(stpar, year, Lbar, ss, LH, Lc, nbreaks, spCont));
    return rcpp_result_gen;
END_RCPP
}
// SSM_MSM1_pred
List SSM_MSM1_pred(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM1, int spCont);
RcppExport SEXP MLZ_SSM_MSM1_pred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM1SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM1(isMSM1SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(SSM_MSM1_pred(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM1, spCont));
    return rcpp_result_gen;
END_RCPP
}
// SSM_MSM1_fullnegLL
double SSM_MSM1_fullnegLL(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM1, int spCont);
RcppExport SEXP MLZ_SSM_MSM1_fullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM1SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM1(isMSM1SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(SSM_MSM1_fullnegLL(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM1, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MSM23_negLL
double MSM23_negLL(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM3, int spCont);
RcppExport SEXP MLZ_MSM23_negLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM3SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM3(isMSM3SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MSM23_negLL(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM3, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MSM23_profile
double MSM23_profile(NumericVector stpar, NumericVector year, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM3, int spCont);
RcppExport SEXP MLZ_MSM23_profile(SEXP stparSEXP, SEXP yearSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM3SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type year(yearSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM3(isMSM3SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MSM23_profile(stpar, year, Lbar, ss, LH, Lc, nbreaks, isMSM3, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MSM23_pred
List MSM23_pred(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM3, int spCont);
RcppExport SEXP MLZ_MSM23_pred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM3SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM3(isMSM3SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MSM23_pred(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM3, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MSM23_fullnegLL
double MSM23_fullnegLL(NumericVector stpar, NumericMatrix Lbar, NumericMatrix ss, NumericMatrix LH, NumericVector Lc, int nbreaks, int isMSM3, int spCont);
RcppExport SEXP MLZ_MSM23_fullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP isMSM3SEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type isMSM3(isMSM3SEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MSM23_fullnegLL(stpar, Lbar, ss, LH, Lc, nbreaks, isMSM3, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLNPUEnegLL
double MLNPUEnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLNPUEnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLNPUEnegLL(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLNPUEprofile
double MLNPUEprofile(NumericVector Z, NumericVector yearZ, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLNPUEprofile(SEXP ZSEXP, SEXP yearZSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yearZ(yearZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLNPUEprofile(Z, yearZ, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLNPUEpred
List MLNPUEpred(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLNPUEpred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLNPUEpred(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLNPUEfullnegLL
double MLNPUEfullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLNPUEfullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLNPUEfullnegLL(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLWPUEnegLL
double MLWPUEnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLWPUEnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLWPUEnegLL(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLWPUEprofile
double MLWPUEprofile(NumericVector Z, NumericVector yearZ, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLWPUEprofile(SEXP ZSEXP, SEXP yearZSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yearZ(yearZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLWPUEprofile(Z, yearZ, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLWPUEpred
List MLWPUEpred(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLWPUEpred(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLWPUEpred(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
// MLWPUEfullnegLL
double MLWPUEfullnegLL(NumericVector stpar, NumericVector Lbar, NumericVector ss, NumericVector CPUE, NumericVector LH, double Lc, int nbreaks, int loglikeCPUE, int spCont);
RcppExport SEXP MLZ_MLWPUEfullnegLL(SEXP stparSEXP, SEXP LbarSEXP, SEXP ssSEXP, SEXP CPUESEXP, SEXP LHSEXP, SEXP LcSEXP, SEXP nbreaksSEXP, SEXP loglikeCPUESEXP, SEXP spContSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type stpar(stparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Lbar(LbarSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ss(ssSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type CPUE(CPUESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LH(LHSEXP);
    Rcpp::traits::input_parameter< double >::type Lc(LcSEXP);
    Rcpp::traits::input_parameter< int >::type nbreaks(nbreaksSEXP);
    Rcpp::traits::input_parameter< int >::type loglikeCPUE(loglikeCPUESEXP);
    Rcpp::traits::input_parameter< int >::type spCont(spContSEXP);
    rcpp_result_gen = Rcpp::wrap(MLWPUEfullnegLL(stpar, Lbar, ss, CPUE, LH, Lc, nbreaks, loglikeCPUE, spCont));
    return rcpp_result_gen;
END_RCPP
}
